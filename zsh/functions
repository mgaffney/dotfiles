# vim: set filetype=zsh:

# function tj {
#   tmux attach-session -t `tmux list-sessions | sed -E 's/:.*$//' | selecta`
# }

# tars and gzips a list of files/directories
# usage: tgz archive dir1 dir2...
# creates archive.tgz
# (also see `extract` in oh-my-zsh plugins)
function tgz() {
	local -r archive="$1.tar.gz"
	if [ -n "$2" ] ; then
		shift
	fi
	# tar cf - $@ | gzip -c > ${archive}
	tar czf "${archive}" "$@"
  return 0
}

function new-tmux-from-dir-name() {
  tmux new-session -As "$(basename "${PWD}")"
  return 0
}

function g() {
  if [[ $# -gt 0 ]]; then
    git "$@"
  else
    git status -sb
  fi
  return 0
}

function gocd() {
  cd "$(go list -f '{{.Dir}}' "$1")" || return
  return 0
}

function git-delete-branch() {
  local -r branch="$1"
  git push origin --delete "${branch}"
  git branch -d "${branch}"
  return 0
}

function font-search() {
  local -r font="$1"
  brew cask search /"${font}"/
}

function recm() {
  local -r fn="$1"
  if [[ -z "${fn}" ]]; then
    echo "missing note name"
    return 1
  fi
  local dt
  dt=$(date +%Y%m%d)
  local -r outdir="${HOME}/Documents/notes/daily-notes/audio"
  mkdir -p "${outdir}"
  sox -q -d "${outdir}/${fn}-${dt}.mp3"
}


# function gist() {
#   # if there's nothing piped on STDIN
#   if [[ -t 0 ]]; then
#     # and there's no arguments...
#     if ((! $# )); then
#       # take what's on the clipboard and paste it in a new gist
#       command gist -Pcop -f paste.txt
#     else
#       # create a gist based on the arguments give
#       command gist -cop $@
#     fi
#   else
#     # otherwise, create a gist, with arguments, but use the
#     # content from STDIN
#     command gist -cop $@ < /dev/stdin
#   fi
# }

# fh - repeat history
fh() {
  print -z "$( (history) | fzf +s --tac | sed 's/ *[0-9]* *//')"
}

# Go Modules
mod() {
  value="$1"

  if [ -z "$value" ]; then
    case "${GO111MODULE}" in
      "on") value="off" ;;
      "off") value="auto" ;;
      *) value="on" ;;
    esac
  fi

  export GO111MODULE="$value"
  env | grep GO111MODULE
}

mkdcd () {
  [[ -n "$1" ]] && mkdir -p "$1" && builtin cd "$1"
}

timezsh() {
  shell=${1-$SHELL}
  for i in $(seq 1 10); do /usr/bin/time $shell -i -c exit; done
}

profzsh() {
  shell=${1-$SHELL}
  ZPROF=true $shell -i -c exit
}

timevim() {
  for i in $(seq 1 10); do /usr/bin/time vim +qa; done
}

# rars a directory with 50MB splits. Excludes Mac specific files.
#
# usage: rardir bazdir
# creates bazdir.rar
function rardir() {
	local -r dir="$1"
	local -r archive="$1.rar"

  rar a -v50M -r "${archive}" -x "__MACOSX/*" "${dir}"
  return 0
}

# See https://github.com/ryboe/q
function qq() {
    clear

    logpath="$TMPDIR/q"
    if [[ -z "$TMPDIR" ]]; then
        logpath="/tmp/q"
    fi

    if [[ ! -f "$logpath" ]]; then
        echo 'Q LOG' > "$logpath"
    fi

    tail -100f -- "$logpath"
}

function rmqq() {
    logpath="$TMPDIR/q"
    if [[ -z "$TMPDIR" ]]; then
        logpath="/tmp/q"
    fi
    if [[ -f "$logpath" ]]; then
        rm "$logpath"
    fi
    qq
}
